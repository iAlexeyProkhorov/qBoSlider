@model SlideSearchModel
@using Nop.Web.Framework.Models.DataTables

@{
    Layout = "~/Plugins/Widgets.qBoSlider/Views/Admin/_qBoLayout.cshtml";
    ViewBag.Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.Slide.List").Text;

    nopHtml.SetActiveMenuItemSystemName("Baroque-qBoSlider-Slide");
}

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.Slide.List")
    </h1>
    <div class="float-right">
        <a asp-action="Create" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.Slide.AddNew")
        </a>
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = "qBo_slider_slide_list_buttons" })
    </div>
</div>


<section class="content">
    <div class="form-horizontal">
        <form id="slide-collection-form" method="post">
            <div class="cards-group">
                @await Html.PartialAsync("~/Plugins/Widgets.qBoSlider/Views/Admin/_SlideSearch.cshtml", Model)
                <div class="card card-default">
                    <div class="card-body">
                       @await Html.PartialAsync("Table", new DataTablesModel
                       {
                           Name = "slider-grid",
                           UrlRead = new DataUrl("List", "qBoSlide", null),
                           UrlDelete = new DataUrl("Delete", "qBoSlide", null),
                           SearchButtonId = "search-slides",
                           Length = Model.PageSize,
                           LengthMenu = Model.AvailablePageSizes,
                           Filters = new List<FilterParameter>
                            {
                            new FilterParameter(nameof(Model.SearchName)),
                            new FilterParameter(nameof(Model.SearchWidgetZoneId)),
                            new FilterParameter(nameof(Model.SearchStartDateOnUtc)),
                            new FilterParameter(nameof(Model.SearchFinishDateOnUtc)),
                            new FilterParameter(nameof(Model.SearchPublicationStateId))
                            },
                           ColumnCollection = new List<ColumnProperty>
                            {
                            new ColumnProperty(nameof(SlideSearchModel.SlideListItemModel.Picture))
                            {
                            Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.Slide.List.Picture").Text,
                            Width = "300",
                            Visible = true,
                            Render = new RenderPicture()
                            },
                            new ColumnProperty(nameof(SlideSearchModel.SlideListItemModel.Name))
                            {
                            Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.Slide.List.Name").Text,
                            Width = "300",
                            Visible = true
                            },
                            new ColumnProperty(nameof(SlideSearchModel.SlideListItemModel.StartDateUtc))
                            {
                            Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.Slide.List.StartDateUtc").Text,
                            Width = "100",
                            Render = new RenderDate()
                            },
                            new ColumnProperty(nameof(SlideSearchModel.SlideListItemModel.EndDateUtc))
                            {
                            Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.Slide.List.EndDateUtc").Text,
                            Width = "100",
                            Render = new RenderDate()
                            },
                            new ColumnProperty(nameof(SlideSearchModel.SlideListItemModel.Published))
                            {
                            Title = T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.Slide.List.Published").Text,
                            ClassName = NopColumnClassDefaults.CenterAll,
                            Width = "100",
                            Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(SlideSearchModel.SlideListItemModel.Id))
                            {
                            Title = T("Admin.Common.Edit").Text,
                            ClassName = NopColumnClassDefaults.Button,
                            Width = "100",
                            Render = new RenderButtonEdit(new DataUrl("Edit"))
                            }
                            }
                       })
                        <input type="submit" id="btnRefresh" style="display: none" />
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>
<script type="text/javascript">
    $(document).ready(function () {
                        $('#btnRefresh').click(function () {
                            //refresh grid
                            updateTable('#slider-grid');

                            //return false to don't reload a page
                            return false;
                        });
                    });

    function renderColumnHyperlink(data, type, row, meta) {
        if (row.Hyperlink) {
            return '<a href="' + row.Hyperlink + '" target="_blank" class="btn btn-default">' + '@(T("Nop.Plugin.Baroque.Widgets.qBoSlider.Admin.Slide.List.Redirect").Text)' + '</a>';
        }
        else {
            return "";
        }
    }
</script>
